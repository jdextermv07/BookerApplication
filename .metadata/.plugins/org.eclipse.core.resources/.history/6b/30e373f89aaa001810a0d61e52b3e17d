package com.pw.io.booker.controller;

import java.io.IOException;
import java.nio.charset.StandardCharsets;
import java.util.List;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;

import com.pw.io.booker.model.TravelItem;
import com.pw.io.booker.model.TravelPackage;
import com.pw.io.booker.service.TravelItemService;
import com.pw.io.booker.service.TravelPackageService;

@RestController
public class TravelPackageController {

	private TravelPackageService travelPackageService;
	private TravelItemService travelItemService;

	public TravelPackageController(TravelPackageService travelPackageService, TravelItemService travelItemService) {
		super();
		this.travelPackageService = travelPackageService;
		this.travelItemService = travelItemService;
	}

	
	@GetMapping("/travel-packages")
	public List<TravelPackage> getTravelPackage() {
		return travelPackageService.findAll();
	}
	
	@GetMapping("/travel-packages/{id}")
	public TravelPackage getTravelPackageById(@PathVariable("id") int idNumber) {
		return travelPackageService.findById(idNumber);
	}
	
	@GetMapping("/travel-packages")
	public String uploadedFile(@RequestParam("file-upload")MultipartFile file) throws IOException{
		return new String(file.getBytes(), StandardCharsets.UTF_8);
	}

	@PostMapping("/travel-packages")
	public TravelPackage createPackage(@RequestBody TravelPackage travelPackage) {
		return travelPackageService.createPackage(travelPackage);
	}
	
	@PutMapping("/travel-packages/{id}")
	public TravelPackage editTravelPackageById(@PathVariable("id") int idNumber,
			@RequestBody TravelPackage travelPackage) {
		travelPackage.setTravelPackageId(idNumber);
		return travelPackageService.createPackage(travelPackage);	 
	}
	
	@DeleteMapping("/travel-packages/{id}")
	public void deleteTravelPackageById(@PathVariable("id") int idNumber) {
		travelPackageService.delete(travelPackageService.findById(idNumber));
	}
		
	
	
	
	

}
